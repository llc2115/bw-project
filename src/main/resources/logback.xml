<?xml version="1.0" encoding="UTF-8"?>


<configuration>
    <springProperty scope="context" name="LOG_LEVEL" source="log.level" defaultValue="INFO"/>
    <springProperty scope="context" name="applicationName" source="spring.application.name"/>
    <springProperty scope="context" name="path" source="log.path" defaultValue="./logs"/>
    <springProperty scope="context" name="maxHistory" source="log.maxHistory" defaultValue="30"/>

    <!-- 定义日志文件 输入位置 -->
    <property name="log_dir" value="${path}/${applicationName}"/>
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="${maxHistory}"/>
    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36}.%M\\(%line\\) -%msg%n" />

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>


    <!-- 自定义级别日志 appender -->
    <appender name="All" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，记录LOG_LEVEL级别以上的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${LOG_LEVEL}</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/${LOG_LEVEL}.%i.log
            </fileNamePattern>
            <!-- 日志最大的历史 30天 -->
            <maxHistory>${maxHistory}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 最大64MB 超过最大值，会重新建一个文件-->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!--<logger name="java.sql.PreparedStatement" value="DEBUG"/>-->
    <!--<logger name="java.sql.Connection" value="DEBUG"/>-->
    <!--<logger name="java.sql.Statement" value="DEBUG"/>-->
    <!--<logger name="com.ibatis" value="DEBUG"/>-->
    <!--<logger name="com.ibatis.common.jdbc.SimpleDataSource" value="DEBUG"/>-->
    <!--<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>-->
    <!--<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>-->
    <!--<logger name="springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping" value="INFO"/>-->
    <!--<logger name="com.qz" level="DEBUG" additivity="true">-->
    <!--<appender-ref ref="STDOUT"/>-->
    <!--</logger>-->

    <!-- root级别   DEBUG -->
    <root level="${LOG_LEVEL}">
        <!--<root level="DEBUG">-->
        <!-- 控制台输出 -->
        <appender-ref ref="STDOUT"/>
        <!-- 文件输出 -->
        <!--<appender-ref ref="ERROR"/>-->
        <appender-ref ref="All"/>
    </root>
</configuration>